input {
	pipeline {
    	address => "workerlogs"
		add_field => {'application' => 'worker-logs'}
  	}
	# beats {
	# 	port => 5044
	# 	add_field => {'application' => 'worker-logs'}
	# }

	# file {
	# 	path => "/tmp/rpm-*.log"
	# 	start_position => "beginning"
	# 	#sincedb_path => "/dev/null" #/tmp/rpm-worker-logs.sincedb
	# 	sincedb_path => "/tmp/rpm-worker-logs.sincedb"
	# 	codec => multiline {
	# 		pattern => "^%{TIMESTAMP_ISO8601}"
	# 		negate => "true"
	# 		what => "previous"
	# 	}
	# 	add_field => {'application' => 'worker-logs'}
	# }
}
filter {
	if [application] == 'worker-logs' {
		
		# Desarmo las lÃ­neas del log con grok
		grok {
		match => { 
		  "message" => [
			  '(?m)%{TIMESTAMP_ISO8601:fechaHora}%{SPACE}\[%{DATA:thread}\]%{SPACE}%{LOGLEVEL:logLevel}%{SPACE}(?<clase>(?:[a-zA-Z0-9-]+\.)+<?[A-Za-z0-9$]+>?):%{NUMBER:lineaLog}%{SPACE}-%{SPACE}%{GREEDYDATA:mensaje}'
		  ] 
		}    
		id => "grok-line-worker-log"        
		}

		# Al desarme anterior, obtengo el nombre del archivo para agregarlo como una etiqueta nueva
		grok {
			match => ["[log][file][path]","%{GREEDYDATA}/rpm-%{GREEDYDATA:nombreWorker}-%{YEAR}-%{MONTHNUM}-%{MONTHDAY}\.log"]
			#tag_on_failure => [ ]
			id => "grok-path-worker-log"
		}


		# Resguardo el valor de @Timestamp en una nueva variable
		mutate {
			rename => {"@timestamp" => "processTime"}
			id => "rename-field-worker-log"
		}

		# Casteo los datos segun sea necesario
		mutate {
			# convert => {'xxx' => 'float'} 
			convert => {'lineaLog' => 'integer'} 
			id => "convert-field-worker-log"
		}

		date {
		match => [ "fechaHora", "yyyy-MM-dd HH:mm:ss.SSS" ]
			# tag_on_failure => [ ]
			target => "@timestamp"
			id => "set-date-as-timestamp"
		}

		# Elimina etiquetas que no son necesarias
		# Por ahora dejo, me sirven para ver que esta mandando ---> path, message
		mutate {
			remove_field => [ "@version", "host", "ecs", "agent", "input", "log", "event"] 
			id => "remove-field-worker-log"
		}
	}
}
output {
	if [application] == 'worker-logs' {
    #stdout {} 

    # Solo coincidencias correctas con grok
    if '_grokparsefailure' not in [tags]{
        elasticsearch {
		  hosts => "elasticsearch:9200"
		  user => "logstash_internal"
		  password => "${LOGSTASH_INTERNAL_PASSWORD}"
          index => "worker-log-%{+yyyy.MM.dd}"
          template_name => "worker-log"
          template => "/usr/share/logstash/template/worker-log.json"
        }              
    } 
    # Solo muestra los eventos que dieron error en el grok
    else {
        stdout {} 
    }

  }		
}