input {
	pipeline {
    	address => "msmanagerlogs"
		add_field => {'application' => 'ms-process-manager-log'}
  	}
	# beats {
	# 	port => 5044
	# 	add_field => {'application' => 'ms-process-manager-log'}
	# }

    # file {
	# 	path => "/ms-process-manager/ms_process_manager.log"
	# 	start_position => "beginning"
	# 	sincedb_path => "/ms-process-manager/ms-process-manager-log.sincedb"
	# 	codec => multiline {
	# 	  pattern => "^%{TIMESTAMP_ISO8601}"
	# 	  negate => "true"
	# 	  what => "previous"
	# 	}
	# 		add_field => {'application' => 'ms-process-manager-log'}
	# }
}
filter {
	if [application] == 'ms-process-manager-log' {
		
		# Desarmo las lÃ­neas del log con grok
		grok {
			match => { 
			"message" => [
				#'(?m)%{TIMESTAMP_ISO8601:fechaHora}%{SPACE}%{LOGLEVEL:logLevel}%{SPACE}\[%{DATA:thread}\]%{SPACE}(?<clase>(?:\([a-zA-Z0-9-]+)+\s*<?[A-Za-z0-9$]+\)>?)%{SPACE}%{GREEDYDATA:mensaje}',
				'(?m)%{TIMESTAMP_ISO8601:fechaHora}%{SPACE}%{LOGLEVEL:logLevel}%{SPACE}\[%{DATA:thread}\]%{SPACE}\((?<clase>(?:[a-zA-Z0-9-]+[\s.-]*)+)\)%{SPACE}%{GREEDYDATA:mensaje}'
			] 
			}    
			id => "grok-line-manager-log"        
		}		

		# Resguardo el valor de @Timestamp en una nueva variable
		mutate {
			rename => {"@timestamp" => "processTime"}
			id => "rename-field-manager-log"
		}

		# Casteo los datos segun sea necesario
		# mutate {
		#   convert => {'xxx' => 'float'} 
		#   convert => {'lineaLog' => 'integer'} 
		#   id => "convert-field-manager-log"
		# }

		date {
			match => [ "fechaHora", "yyyy-MM-dd HH:mm:ss,SSS" ]
			# tag_on_failure => [ ]
			target => "@timestamp"
			id => "set-date-as-timestamp"
		}

		# Elimina etiquetas que no son necesarias 
		# Por ahora dejo, me sirven para ver que esta mandando ---> path, message
		mutate {
			remove_field => [ "@version", "host", "path", "event"] 
			id => "remove-field-manager-log"
		}
	}
}
output {
  if [application] == 'ms-process-manager-log' {
    #stdout {} 

    # Solo coincidencias correctas con grok
    if '_grokparsefailure' not in [tags]{
        elasticsearch {
		  hosts => "elasticsearch:9200"
		  user => "logstash_internal"
		  password => "${LOGSTASH_INTERNAL_PASSWORD}"
          index => "process-manager-log-%{+yyyy.MM.dd}"
          #template_name => "worker-log"
          #template => "/usr/share/logstash/template/worker-log.json"
        }              
    } 
    # # Solo muestra los eventos que dieron error en el grok
    else {
        stdout {} 
    }
  }		
}